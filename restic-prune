#!/bin/bash

logfile=/var/log/restic-backup.log
errfile=/var/log/restic-backup.err

# Check for root user
checkroot()
{
    # Check for root user
    if [ `whoami` != "root" ]; then
	echo "$0 must be run as root" 1>&2
	exit 1
    fi
}

# Define path to restic executable
if [ `uname` == "Darwin" ]; then
	prog=/opt/local/bin/restic
else
	prog=/usr/bin/restic
fi

# Check for verbose output: default no
if [ "$verbose" == "yes" ]; then
    verbose="--verbose=3"
else
    verbose=
fi

# Check for quiet execution of restic: default yes
if [ "$quiet" != "no" ]; then
    quiet=--quiet
    verbose=
else
    quiet=
fi

export RESTIC_PASSWORD_FILE=~/.resticpw

# Help function
help()
{
    echo "usage: restic-prune lan|onedrive|all|help"
    echo
    echo "VARIABLES:"
    echo "quiet  verbose  output"
    echo "--------------------------------"
    echo "yes    --       no std out"
    echo "no     no       normal std out"
    echo "no     yes      extended std out"
}

log()
{
    echo `date`": $1" >> $logfile
}

prune()
{
    log "   Pruning repository $1 ..."
    $prog -r $1 unlock
    $prog -r $1 forget $quiet $verbose\
	   --prune \
	   --keep-hourly 2 \
	   --keep-daily 7 \
	   --keep-weekly 4 \
	   --keep-monthly 2 $RESTIC_DRYRUN

}

check()
{
    log "   Checking repository $1 ..."
    $prog -r $1 unlock
    $prog -r $1 check $quiet $verbose
}

if [ `hostname` = "raspberrypi2" ]; then
    export repo_lan=/var/Backup/hebbie
else
    export repo_lan=sftp:`whoami`"@raspberrypi2:/var/Backup/hebbie"
fi
export repo_onedrive=rclone:onedrive:backup/hebbie

case "$1" in
    "lan"|"onedrive"|"all")
	;;
    "help")
	help
	exit 0
	;;
    *)
	help
	exit 1
	;;
esac

doprune()
{
    { err="$( { prune $1; } 2>&1 1>&3 3>&- )"; } 3>&1
    if [ $? -ne 0 ]; then
	echo $err 1>&2
	log "   $err"
	log "$0: prune (restic) of $1 failed."
	exit 1
    fi
}

docheck()
{
    { err="$( { check $1 $quiet $verbose; } 2>&1 1>&3 3>&- )"; } 3>&1
    if [ $? -ne 0 ]; then
	echo $err 1>&2
	log "   $err"
	log "$0: check (restic of $1 failed."
    fi
}

checkroot

log "$0: prune (restic) of $1 started."

# prune:
# keep 2 hourly snapshots
# keep 7 daily snapshots
# keep 4 weekly snapshots
case "$1" in
    "lan")
	doprune $repo_lan
	if [ "$check" != "no" ]; then docheck $repo_lan; fi
	;;
    "onedrive")
	doprune $repo_onedrive
	if [ "$check" != "no" ]; then docheck $repo_onedrive; fi
	;;
    "all")
	doprune $repo_lan
	if [ "$check" != "no" ]; then docheck $repo_lan; fi
        doprune $repo_onedrive
	if [ "$check" != "no" ]; then docheck $repo_onedrive; fi
	;;
esac

log "$0: prune (restic)  of $1 finished."
exit 0
